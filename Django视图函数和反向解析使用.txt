视图函数、反向解析：
反向解析是动态生成路径的，不是写死的路径
反向解析是根据根路由中注册的namespace和在子路由中注册的name,这两个参数来动态获取我们的路径。
在模板中使用方法：{% url 'namespace:name' %}
如果带有位置参数：{% url 'namespace:name'  value1 value2 [valuen .....]%}
如果带有关键字参数：{% url 'namespace:name'  key1=value1 key2=value2 [keyn=valluen...] %}

1、反向解析主路由设置：
（1）在Django2.0以下版本中需要在根路由地址上加上namespace=‘second’
   path('URLs/',include('URLs.urls',namespace='second')),
（2）在Django2.0以上版本中需要在根路由地址上加上参数和namespace=‘second’
   path('URLs/',include(('URLs.urls','second'),namespace='second')),

（3）需要在应用的路由里加上name='     '。
      url('learn/', views.learn, name='learn'),

（4）需要在html写法如下：
      <a href="{% url 'second:learn' %}">新的方式</a>

2、反向解析传参(包含时间日期传参)：
按顺序传参：（包含时间传参）
（1）在应用路由上加上name='    '。
url('timesget/(\d+)/(\d+)/(\d+)/', views.get_time, name='get_time'),

def get_time(request, hour, minute, second):
    		return HttpResponse("Time %s: %s %s" %(hour, minute, second))

（2）在链接上加上{% url 'second:get_time' %}
<a href="{% url 'second:get_time' 16 50 8%}">反向解析时间传参</a>



按关键字参数传参（包含日期传参）
（1）在应用路由上加上name='    '。
url('dateget/(?P<year>\d+)/(?P<month>\d+)/(?P<day>\d+)/', views.get_date, name='get_date'),

def get_date(request, day, month, year):
    		return HttpResponse("Time %s- %s- %s" %(year, month, day))

（2）在链接上加上{% url 'second:get_time' %}
<a href="{% url 'second:get_date' year=2020 month=02 day=18 %}">反向解析时间传参</a>
